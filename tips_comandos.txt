# comandos para ser usados 6 sept 2024
#
# xxxxxxxxxxxxxxx
# desde una terminal abre visual studio code con el contenido de la carpeta
# code .
#xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ngrok. primero se debe descargar el agente desde la pagina de ngrok
# y luego instalar el token con el comando que aparece en la pagina
# iniciar ngrok agente
# lanzar o iniciar el tunel usando el dominio estatico
#xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#
# comandos git (clone, add, commit, push y pull)
#
# clone: download a copy from reposity, one time use
# add: add a file to a commit, one time per commit
# commit: stage changes with a message, creates a snapshot/version
# push: copy a commit to a repository
# pull: pull down commits from repository
#
#xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# validar que el pc si tenga instalado git, si no lo tiene instalarlo en windows o mac os
# configura nombre y correo de la cuenta git
# git config --global user.name "Diego"
# git config --global user.email "diegoenn@gmail.com"
# inicializa una carpeta de un repositorio git
# git init
# descarga una copia de un repositorio actual en github
# git clone
# agrega un repositorio remoto de github a la consola local, debe hacerse dentro de la carpeta local
# git remote add origin https://github.com/diegoenn/whatsap_ai.git 
# muestra los repositorios remotos
# git remote -v
# muestra el estado de los archivos modificados y los no trakeados
# git status
#agrega archivos que no estan trackeados a que si queden trakeados
# git add .
# agrega un commit de los archivos a cargar con un nombre que los distingue
# git commit -m "se actulizo los archivos xxxxx"
# se valida el estado de nuestros commits
# git log
# muestra todas las branch que se tienen
# git branch
# se configura el branch master por primera vez
# git push origin nombre_branch
# crear una nueva branch en github
# git branch nombre_branch
# para cambiar de branch, a la branch diego
# git checkout nombre_branch
# para halar el contenido desde el remoto hacia el local sin hacer un rebase o perdida del trabajo local
# git pull --no-rebase https://github.com/diegoenn/whatsap_ai.git diego

###########################################################################################################
# whatsapp_ai
Este es un proyecto basado en un tutorial de internet
en el cual se pueden enviar mensajes de whatsapp a trave del API de whatsapp e interactuar con openai

- link de documentacion oficial de meta
https://developers.facebook.com/blog/post/2022/10/24/sending-messages-with-whatsapp-in-your-python-applications/
- para iniciar la aplicacion se debe correr este comando en la terminal
`flask run`

# ####################################################################

## primeros pasos para activar el entorno virtual de python

- para validar las versiones de python instaladas en el equipo
`py --list`
- para validar el interprete que se esta usando
`python3 --version`
`python --version`

- abrir consola en una terminal cmd o en la terminal de visual studio code
comando para ingresar a una carpeta en en computador llamada myproject
`cd myproject`
- comando para validar la version de python
`python3 --version`
- comando para instalar pip usando homebrew
`python3 -m ensurepip`
- comando para validar la version de pip framework en python
`pip3 --version en mac or pip --version en windows`

# ####################################################################
## crear, habilitar y sincronizar el repositorio de git

- clonar el repositorio desde github a local se hace con 
`git clone url_repositorio_remoto`

- antes de empezar a modificar el codigo en local asegurarse de cargar la ultima version de github
`git pull url_repositorio_remoto`

- configura nombre y correo de la cuenta git
`git config --global user.name "Diego"`
`git config --global user.email "diegoenn@gmail.com"`

- luego dentro de la carpeta del proyecto iniciar un repositorio git
`git init`

- para hacer commits usar los siguientes comandos
`git status`
`git branch`
`git checkout nombre_branch`
`git add .`
`git commit -m "mensaje del commit"`
`git push origin nombre_branch`

- agrega un repositorio remoto de github a la consola local, debe hacerse dentro de la carpeta local
`git remote add origin url_rositorio_github`
`git remote -v`
`git log`



# ####################################################################
## crear un entorno virtual

- comando para crear un entorno virtual dentro de la carpeta del proyecto
`python3 -m venv venv`
o si se quiere configurar con una version especifica de python en el entorno virtual usar el siguiente comando
`py -3.11 -m venv venv`
`py -3.12 -m venv venv`

- comando para activar un entorno virtual dentro de la carpeta del proyecto
`source venv/bin/activate` en mac or `.\venv\Scripts\activate` en windows
- comando para desactivar un env virtual
`deactivate`
- comando para listar librerias instaladas en python dentro del entorno
`pip list` en windows or `pip3 list` en mac
- como saber en que ruta o entorno virtual estoy?
mirando la ruta y el nombre del entorno que aparece en parentesis

# ############################################################################
## instalando paquetes

### instalando la aplicacion desde requirements.txt
- par instalar todas los paquetes requeridos desde el archivo requirements.txt lanzar el siguiente comando
para ello se debe tener el listado de paquetes escrito en ese archivo
`pip install -r requirements.txt`

### corriendo la aplicacion
comando para correr flask
`flask run`

# ############################################################################
## instalacion de base de datos

- instalacion de db postgresql
- descargar postgresql version 16 extension dmg de edb o superior de postgresql.org son como 360 megas
- instalar la db en la laptop siguiendo el wizard
- instalamos los 4 componentes (postgresql server, pgadmin, stack builder, command line tools)
- default database name: postgres
- pwd database: mondi 
- port: 5432
- al final de la instalacion unselect el checkbox de stack builder
- despues de la instalacion aparecen 3 iconos(pgadmin, sql shell (psql) y psql 16)

# #############################################################